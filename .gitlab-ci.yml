###################
# Global Settings #
###################

stages:
  - Build
  - Test
  - Format
  - Deploy

before_script:
  - '[ "$(git rev-parse origin/$CI_COMMIT_REF_NAME)" != "$CI_COMMIT_SHA" ] && curl --header "PRIVATE-TOKEN: $MY_CI_API_TOKEN" -X POST https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/pipelines/$CI_PIPELINE_ID/cancel'
cache:
  key: ${CI_JOB_NAME#*:}-${CI_COMMIT_REF_SLUG}
  paths:
    - ${CI_PROJECT_DIR}/ccache/ #/builds/gitlab_account/flecsi/ccache
    - ${CI_PROJECT_DIR}/build/
    - ${CI_PROJECT_DIR}/install/
variables:
  GLOBAL_CI_VARIABLE: "global_ci_value"
  CCACHE_DIR: "${CI_PROJECT_DIR}/ccache"
  CI_DEBUG_TRACE: "true"

###################
###################
###################

###############
# Build Stage #
###############

.build:
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
      - unknown_failure
  variables:
    DISTRO: ""
    RUNTIME: ""
    CC: "gcc"
    CXX: "g++"
    WERROR: "yes"
    BUILD_TYPE: "Debug"
    COVERAGE: "ON"
    GIT_SUBMODULE_STRATEGY: none
  image:    
    name: laristra/flecsi-third-party:${DISTRO} #user: flecsi
  stage: Build
  artifacts:
    #expire_in: 3 hour
    paths:
      - ${CI_PROJECT_DIR}/ccache/ #/builds/gitlab_account/flecsi/ccache
      - ${CI_PROJECT_DIR}/build/
      - ${CI_PROJECT_DIR}/install/
    when: on_failure
  script:
    - ccache -z
    #- git submodule init
    #- git config submodule.cinch.url https://github.com/laristra/cinch.git
    #- git submodule update --init --recursive
    - mkdir ${CI_PROJECT_DIR}/build
    - cd build
    - | 
      cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
        -DFLECSI_RUNTIME_MODEL=$RUNTIME \
        ${MINIMAL:+-DCMAKE_DISABLE_FIND_PACKAGE_METIS=ON} \
        -DFLECSI_ENABLE_TUTORIAL=$([ "$RUNTIME" = "hpx" ] && echo OFF || echo ON) \
        -DENABLE_UNIT_TESTS=ON \
        -DENABLE_PARMETIS=ON \
        -DENABLE_COLORING=ON \
        -DENABLE_DOXYGEN=ON \
        #-DENABLE_SPHINX=ON \
        -DENABLE_DOCUMENTATION=OFF \
        ${COVERAGE:+-DENABLE_COVERAGE_BUILD=ON} \
        ..
    - make -k VERBOSE=1 -j2
    - make install DESTDIR=${CI_PROJECT_DIR}/install 
    - sudo make install 
    - ccache -s

##############
# Build Jobs #
##############

build:ubuntu_mpi:
  extends: .build
  variables:
    DISTRO: "ubuntu"
    RUNTIME: "mpi"

build:ubuntu_mpi_release:
  extends: build:ubuntu_mpi
  variables:
    BUILD_TYPE: "Release"

build:ubuntu_mpi_clang:
  extends: build:ubuntu_mpi
  #before_script:
  #  - export CC=clang
  #  - export CXX=clang++
  variables:
    CC: clang
    CXX: clang++

build:ubuntu_mpi_clang_release:
  extends: build:ubuntu_mpi_clang
  variables:
    BUILD_TYPE: "Release"

build:ubuntu_mpich_mpi:
  extends: .build
  variables:
    DISTRO: "ubuntu_mpich"
    RUNTIME: "mpi"

build:ubuntu_mpich_mpi_release:
  extends: build:ubuntu_mpich_mpi
  variables:
    BUILD_TYPE: "Release"

build:ubuntu_mpich_mpi_clang:
  extends: build:ubuntu_mpich_mpi
  variables:
    CC: clang
    CXX: clang++

build:ubuntu_mpich_mpi_clang_release:
  extends: build:ubuntu_mpich_mpi_clang
  variables:
    BUILD_TYPE: "Release"

build:fedora_mpi:
  extends: .build
  variables:
    DISTRO: "fedora"
    RUNTIME: "mpi"

build:fedora_mpi_release:
  extends: build:fedora_mpi
  variables:
    BUILD_TYPE: "Release"

build:fedora_mpi_clang:
  extends: build:fedora_mpi
  variables:
    CC: clang
    CXX: clang++

build:fedora_mpi_clang_release:
  extends: build:fedora_mpi_clang
  variables:
    BUILD_TYPE: "Release"

build:fedora_mpich_mpi:
  extends: .build
  variables:
    DISTRO: "fedora_mpich"
    RUNTIME: "mpi"

build:fedora_mpich_mpi_release:
  extends: build:fedora_mpich_mpi
  variables:
    BUILD_TYPE: "Release"

build:fedora_mpich_mpi_clang:
  extends: build:fedora_mpich_mpi
  variables:
    CC: clang
    CXX: clang++

build:fedora_mpich_mpi_clang_release:
  extends: build:fedora_mpich_mpi_clang
  variables:
    BUILD_TYPE: "Release"

build:ubuntu_legion:
  extends: .build
  variables:
    DISTRO: "ubuntu"
    RUNTIME: "legion"

build:ubuntu_legion_release:
  extends: build:ubuntu_legion
  variables:
    BUILD_TYPE: "Release"

build:ubuntu_legion_clang:
  extends: build:ubuntu_legion
  variables:
    CC: clang
    CXX: clang++

build:ubuntu_legion_clang_release:
  extends: build:ubuntu_legion_clang
  variables:
    BUILD_TYPE: "Release"

build:ubuntu_mpich_legion:
  extends: .build
  variables:
    DISTRO: "ubuntu_mpich"
    RUNTIME: "legion"

build:ubuntu_mpich_legion_release:
  extends: build:ubuntu_mpich_legion
  variables:
    BUILD_TYPE: "Release"

build:ubuntu_mpich_legion_clang:
  extends: build:ubuntu_mpich_legion
  variables:
    CC: clang
    CXX: clang++

build:ubuntu_mpich_legion_clang_release:
  extends: build:ubuntu_mpich_legion_clang
  variables:
    BUILD_TYPE: "Release"

build:fedora_legion:
  extends: .build
  variables:
    DISTRO: "fedora"
    RUNTIME: "legion"

build:fedora_legion_release:
  extends: build:fedora_legion
  variables:
    BUILD_TYPE: "Release"

build:fedora_legion_clang:
  extends: build:fedora_legion
  variables:
    CC: clang
    CXX: clang++

build:fedora_legion_clang_release:
  extends: build:fedora_legion_clang
  variables:
    BUILD_TYPE: "Release"

build:fedora_mpich_legion:
  extends: .build
  variables:
    DISTRO: "fedora_mpich"
    RUNTIME: "legion"

build:fedora_mpich_legion_release:
  extends: build:fedora_mpich_legion
  variables:
    BUILD_TYPE: "Release"

build:fedora_mpich_legion_clang:
  extends: build:fedora_mpich_legion
  variables:
    CC: clang
    CXX: clang++

build:fedora_mpich_legion_clang_release:
  extends: build:fedora_mpich_legion_clang
  variables:
    BUILD_TYPE: "Release"

build:fedora_hpx:
  extends: .build
  variables:
    DISTRO: "fedora"
    RUNTIME: "hpx"
  allow_failure: true

build:fedora_hpx_clang:
  extends: build:fedora_hpx
  variables:
    CC: clang
    CXX: clang++

###############
###############
###############

##############
# Test Stage #
##############

.test:
  retry: 2
  variables:
    DISTRO: ""
    COVERAGE: "OFF"
    IGNORE_NOCI: "FALSE"
  image: laristra/flecsi-third-party:${DISTRO} #user: flecsi
  stage: Test
  script:
    - cd ${CI_PROJECT_DIR}/build/
    - |
      if [ ${COVERAGE} ];
      then 
        python -m coverxygen --xml-dir doc/doxygen/xml/ \
          --src-dir .. \
          --output doxygen.coverage.info;
        wget -O codecov.sh https://codecov.io/bash;
        bash codecov.sh -X gcov \
          -f doxygen.coverage.info \
          -F documentation;
        doxy-coverage --threshold 24 doc/doxygen/xml/;
      fi
    - make test ARGS="-V"
    - $HOME/.local/bin/gcovr .
    - cd ..
    - |
      if [ ${COVERAGE} ];
      then 
        if [ ${CC} = clang ];
        then 
          $HOME/.local/bin/codecov -F "${CC}" \
            --gcov-exec "llvm-cov gcov";
        else 
          $HOME/.local/bin/codecov -F "${CC}";
        fi;
      fi

#############
# Test Jobs #
#############

test:ubuntu_mpi:
  extends: .test
  variables:
    DISTRO: "ubuntu"

test:ubuntu_mpi_release:
  extends: test:ubuntu_mpi

test:ubuntu_mpi_clang:
  extends: test:ubuntu_mpi

test:ubuntu_mpi_clang_release:
  extends: test:ubuntu_mpi_clang

test:ubuntu_mpich_mpi:
  extends: .test
  variables:
    DISTRO: "ubuntu_mpich"

test:ubuntu_mpich_mpi_release:
  extends: test:ubuntu_mpich_mpi

test:ubuntu_mpich_mpi_clang:
  extends: test:ubuntu_mpich_mpi

test:ubuntu_mpich_mpi_clang_release:
  extends: test:ubuntu_mpich_mpi_clang

test:fedora_mpi:
  extends: .test
  variables:
    DISTRO: "fedora"

test:fedora_mpi_release:
  extends: test:fedora_mpi

test:fedora_mpi_clang:
  extends: test:fedora_mpi

test:fedora_mpi_clang_release:
  extends: test:fedora_mpi_clang

test:fedora_mpich_mpi:
  extends: .test
  variables:
    DISTRO: "fedora_mpich"

test:fedora_mpich_mpi_release:
  extends: test:fedora_mpich_mpi

test:fedora_mpich_mpi_clang:
  extends: test:fedora_mpich_mpi

test:fedora_mpich_mpi_clang_release:
  extends: test:fedora_mpich_mpi_clang

test:ubuntu_legion:
  extends: .test
  variables:
    DISTRO: "ubuntu"

test:ubuntu_legion_release:
  extends: test:ubuntu_legion

test:ubuntu_legion_clang:
  extends: test:ubuntu_legion

test:ubuntu_legion_clang_release:
  extends: test:ubuntu_legion_clang

test:ubuntu_mpich_legion:
  extends: .test
  variables:
    DISTRO: "ubuntu_mpich"

test:ubuntu_mpich_legion_release:
  extends: test:ubuntu_mpich_legion

test:ubuntu_mpich_legion_clang:
  extends: test:ubuntu_mpich_legion

test:ubuntu_mpich_legion_clang_release:
  extends: test:ubuntu_mpich_legion_clang

test:fedora_legion:
  extends: .test
  variables:
    DISTRO: "fedora"

test:fedora_legion_release:
  extends: test:fedora_legion

test:fedora_legion_clang:
  extends: test:fedora_legion

test:fedora_legion_clang_release:
  extends: test:fedora_legion_clang

test:fedora_mpich_legion:
  extends: .test
  variables:
    DISTRO: "fedora_mpich"

test:fedora_mpich_legion_release:
  extends: test:fedora_mpich_legion

test:fedora_mpich_legion_clang:
  extends: test:fedora_mpich_legion

test:fedora_mpich_legion_clang_release:
  extends: test:fedora_mpich_legion_clang

test:fedora_hpx:
  extends: .test
  variables:
    DISTRO: "fedora"
  allow_failure: true

test:fedora_hpx_clang:
  extends: test:fedora_hpx

test:fedora_mpi_coverage:
  extends: test:fedora_mpi
  variables:
    COVERAGE: "ON"
  allow_failure: true

test:fedora_legion_coverage:
  extends: test:fedora_legion
  variables:
    COVERAGE: "ON"
  allow_failure: true

test:fedora_hpx_coverage:
  extends: test:fedora_hpx
  variables:
    COVERAGE: "ON"
  allow_failure: true

test:fedora_mpi_ignoreNoCI:
  extends: test:fedora_mpi
  variables:
    IGNORE_NOCI: "TRUE"
  allow_failure: true

test:fedora_legion_ignoreNoCI:
  extends: test:fedora_legion
  variables:
    IGNORE_NOCI: "TRUE"
  allow_failure: true

test:fedora_hpx_ignoreNoCI:
  extends: test:fedora_hpx
  variables:
    IGNORE_NOCI: "TRUE"
  allow_failure: true

##############
##############
##############

################
# Format Stage #
################

.format:
  retry: 2
  variables:
    DISTRO: ""
  image: laristra/flecsi-third-party:${DISTRO} #user: flecsi
  stage: Format
  script:
    - cd ${CI_PROJECT_DIR}/build/
    - make format-FleCSI && git diff --exit-code

###############
# Format Jobs #
###############

format:fedora_mpi:
  extends: .format
  variables:
    DISTRO: "fedora"

format:fedora_legion:
  extends: .format
  variables:
    DISTRO: "fedora"

format:fedora_hpx:
  extends: .format
  variables:
    DISTRO: "fedora"
  allow_failure: true

################
################
################

################
# Deploy Stage #
################

.deploy:
  only:
    refs:
      - master
      - /^stable\/.*$/
  retry: 2
  variables:
    DISTRO: ""
    RUNTIME: ""
  #services:
  #  - docker:dind
  image: gitlab/dind:latest #user: root
  stage: Deploy
  script:
    - |
      if [[ ${CC} != gcc ]];
      then TAG="_${CC}";
      fi
    - |
      if [[ ${CI_COMMIT_REF_NAME} != stable ]];
      #then TAG="${TAG}_${CI_COMMIT_REF_NAME//[^a-zA-Z0-9]/_}";
      then TAG="${TAG}_${CI_COMMIT_REF_SLUG}";
      fi
    - docker pull laristra/flecsi-third-party:${DISTRO}
    - CON=$(docker run -d laristra/flecsi-third-party:${DISTRO} /bin/bash)
    - docker cp ${CI_PROJECT_DIR}/install ${CON}:/usr/local
    - docker cp ${CI_PROJECT_DIR} ${CON}:/home/flecsi
    #- docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
    #- docker push "${CI_COMMIT_REF_SLUG}:${DISTRO}_${RUNTIME}${TAG}
    - cd ${CI_PROJECT_DIR}/build/
    - make doxygen
    - cd ..
    - |
      if [[ ${CI_JOB_NAME} = "deploy:ubuntu_mpi" ]];
      then 
        rm -rf cinch;
        git fetch origin gh-pages && git checkout -b gh-pages FETCH_HEAD;
        mkdir -p assets;
        rm -rf assets/doxygen doc;
        cp ${CI_PROJECT_DIR}/flecsi/build/doc .;
        mv doc/doxygen/html assets/doxygen;
        for i in doc/*.pdf;
        do
          mv ${i} ${i%-1.0*}.pdf;
        done;
        mv doc/*.pdf assets;
        rm -rf doc;
        git add --all assets/doxygen assets/*.pdf;
        if [[ ${CI_COMMIT_REF_NAME} == master && ${encrypted_5669a181ba27_key} && ${encrypted_5669a181ba27_iv} ]];
        then 
          git config --global user.name "Automatic Deployment (Gitlab CI)";
          git config --global user.email "flecsi-commit@lanl.gov";
          git commit -m "Documentation Update";
          openssl aes-256-cbc -K $encrypted_5669a181ba27_key -iv $encrypted_5669a181ba27_iv -in deploy.enc -out ~/.ssh/id_rsa -d;
          chmod 600 ~/.ssh/id_rsa;
          git push git@github.com:${TRAVIS_REPO_SLUG} gh-pages:gh-pages;
        else
          git status;
          git diff --cached --no-color | head -n 500;
        fi;
      fi

###############
# Deploy Jobs #
###############

deploy:ubuntu_mpi:
  extends: .deploy
  variables:
    DISTRO: "ubuntu"
    RUNTIME: "mpi"

deploy:ubuntu_mpi_release:
  extends: deploy:ubuntu_mpi

deploy:ubuntu_mpi_clang:
  extends: deploy:ubuntu_mpi

deploy:ubuntu_mpi_clang_release:
  extends: deploy:ubuntu_mpi_clang

deploy:ubuntu_mpich_mpi:
  extends: .deploy
  variables:
    DISTRO: "ubuntu_mpich"
    RUNTIME: "mpi"

deploy:ubuntu_mpich_mpi_release:
  extends: deploy:ubuntu_mpich_mpi

deploy:ubuntu_mpich_mpi_clang:
  extends: deploy:ubuntu_mpich_mpi

deploy:ubuntu_mpich_mpi_clang_release:
  extends: deploy:ubuntu_mpich_mpi_clang

deploy:fedora_mpi:
  extends: .deploy
  variables:
    DISTRO: "fedora"
    RUNTIME: "mpi"

deploy:fedora_mpi_release:
  extends: deploy:fedora_mpi

deploy:fedora_mpi_clang:
  extends: deploy:fedora_mpi

deploy:fedora_mpi_clang_release:
  extends: deploy:fedora_mpi_clang

deploy:fedora_mpich_mpi:
  extends: .deploy
  variables:
    DISTRO: "fedora_mpich"
    RUNTIME: "mpi"

deploy:fedora_mpich_mpi_release:
  extends: deploy:fedora_mpich_mpi

deploy:fedora_mpich_mpi_clang:
  extends: deploy:fedora_mpich_mpi

deploy:fedora_mpich_mpi_clang_release:
  extends: deploy:fedora_mpich_mpi_clang

deploy:ubuntu_legion:
  extends: .deploy
  variables:
    DISTRO: "ubuntu"
    RUNTIME: "legion"

deploy:ubuntu_legion_release:
  extends: deploy:ubuntu_legion

deploy:ubuntu_legion_clang:
  extends: deploy:ubuntu_legion

deploy:ubuntu_legion_clang_release:
  extends: deploy:ubuntu_legion_clang

deploy:ubuntu_mpich_legion:
  extends: .deploy
  variables:
    DISTRO: "ubuntu_mpich"
    RUNTIME: "legion"

deploy:ubuntu_mpich_legion_release:
  extends: deploy:ubuntu_mpich_legion

deploy:ubuntu_mpich_legion_clang:
  extends: deploy:ubuntu_mpich_legion

deploy:ubuntu_mpich_legion_clang_release:
  extends: deploy:ubuntu_mpich_legion_clang

deploy:fedora_legion:
  extends: .deploy
  variables:
    DISTRO: "fedora"
    RUNTIME: "legion"

deploy:fedora_legion_release:
  extends: deploy:fedora_legion

deploy:fedora_legion_clang:
  extends: deploy:fedora_legion

deploy:fedora_legion_clang_release:
  extends: deploy:fedora_legion_clang

deploy:fedora_mpich_legion:
  extends: .deploy
  variables:
    DISTRO: "fedora_mpich"
    RUNTIME: "legion"

deploy:fedora_mpich_legion_release:
  extends: deploy:fedora_mpich_legion

deploy:fedora_mpich_legion_clang:
  extends: deploy:fedora_mpich_legion

deploy:fedora_mpich_legion_clang_release:
  extends: deploy:fedora_mpich_legion_clang

################
################
################

